{"version":3,"sources":["webpack:///./resources/js/dashboard/components/BreadCrumbsHeader.js","webpack:///./resources/js/dashboard/components/Header.js","webpack:///./resources/js/dashboard/components/Page.js","webpack:///./resources/js/dashboard/pages/agencies/AgencyEditView/MyAgencyEditForm.js","webpack:///./resources/js/dashboard/pages/agencies/AgencyEditView/editMyAgency.js","webpack:///./resources/js/dashboard/utils/axios.js","webpack:///./resources/js/dashboard/utils/helpers.js","webpack:///./node_modules/@material-ui/core/esm/CardContent/CardContent.js"],"names":["BreadCrumbsHeader","items","Breadcrumbs","separator","fontSize","aria-label","map","item","key","to","Link","variant","color","component","RouterLink","label","Typography","active","propTypes","PropTypes","array","isRequired","useStyles","makeStyles","theme","root","action","marginBottom","spacing","marginLeft","Header","className","breadcrumbItems","title","actionButtonType","actionButtonLabel","actionButtonTo","children","rest","classes","Grid","clsx","container","justify","Box","mt","Button","startIcon","SvgIcon","string","Page","forwardRef","ref","node","datapicker","width","provincias","MyAgencyEditForm","agency","enqueueSnackbar","useSnackbar","initialValues","name","address","province","validationSchema","Yup","shape","max","required","onSubmit","async","values","resetForm","setErrors","setStatus","setSubmitting","axios","put","API_OLD_URL","id","success","reloadPage","error","submit","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Card","CardHeader","Divider","CardContent","xs","TextField","Boolean","fullWidth","helperText","onBlur","onChange","value","lg","director","full_name","disabled","select","SelectProps","native","option","type","object","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","AgencyEditView","user","useAuth","Container","csrfToken","document","querySelector","getAttribute","axiosInstance","create","interceptors","response","use","Promise","reject","data","defaults","headers","common","location","reload","props","_props$component","Component","other","padding"],"mappings":"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","file":"25.js","sourcesContent":["import React from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Breadcrumbs, Link, Typography } from \"@material-ui/core\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\n\r\nfunction BreadCrumbsHeader({ items }) {\r\n    return (\r\n        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n            {items.map((item, key) => {\r\n                if (item.to) {\r\n                    return (\r\n                        <Link key={key} variant=\"body1\" color=\"inherit\" to={item.to} component={RouterLink}>\r\n                            {item.label}\r\n                        </Link>\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <Typography key={key} variant=\"body1\" color={item.active ? \"textPrimary\" : \"inherit\"}>\r\n                            {item.label}\r\n                        </Typography>\r\n                    );\r\n                }\r\n            })}\r\n        </Breadcrumbs>\r\n    );\r\n}\r\n\r\nBreadCrumbsHeader.propTypes = {\r\n    items: PropTypes.array.isRequired\r\n};\r\n\r\nexport default BreadCrumbsHeader;\r\n","import React from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { Box, Button, Grid, SvgIcon, Typography, makeStyles } from \"@material-ui/core\";\r\nimport { PlusCircle as PlusCircleIcon, Edit as EditIcon } from \"react-feather\";\r\n\r\nimport BreadCrumbsHeader from \"@dashboard/components/BreadCrumbsHeader\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    action: {\r\n        marginBottom: theme.spacing(1),\r\n        \"& + &\": {\r\n            marginLeft: theme.spacing(1)\r\n        }\r\n    }\r\n}));\r\n\r\nconst Header = ({\r\n    className,\r\n    breadcrumbItems,\r\n    title,\r\n    actionButtonType,\r\n    actionButtonLabel,\r\n    actionButtonTo,\r\n    children,\r\n    ...rest\r\n}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <Grid className={clsx(classes.root, className)} container justify=\"space-between\" spacing={3} {...rest}>\r\n                <Grid item>\r\n                    <BreadCrumbsHeader items={breadcrumbItems} />\r\n                    <Box mt={2}>\r\n                        <Typography variant=\"h3\" color=\"textPrimary\">\r\n                            {title}\r\n                        </Typography>\r\n                    </Box>\r\n                </Grid>\r\n\r\n                {actionButtonTo && (\r\n                    <Grid item>\r\n                        <Button\r\n                            color=\"secondary\"\r\n                            variant=\"contained\"\r\n                            component={RouterLink}\r\n                            to={actionButtonTo}\r\n                            startIcon={\r\n                                <SvgIcon fontSize=\"small\">\r\n                                    {actionButtonType === \"edit\" ? <EditIcon /> : <PlusCircleIcon />}\r\n                                </SvgIcon>\r\n                            }\r\n                        >\r\n                            {actionButtonLabel}\r\n                        </Button>\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            {children}\r\n        </>\r\n    );\r\n};\r\n\r\nHeader.propTypes = {\r\n    className: PropTypes.string,\r\n    breadcrumbItems: PropTypes.array.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    actionButtonType: PropTypes.string,\r\n    actionButtonLabel: PropTypes.string,\r\n    actionButtonTo: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { forwardRef } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport PropTypes from \"prop-types\";\n\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\n    return (\n        <div ref={ref} {...rest}>\n            <Helmet>\n                <title>{title}</title>\n            </Helmet>\n            {children}\n        </div>\n    );\n});\n\nPage.propTypes = {\n    children: PropTypes.node.isRequired,\n    title: PropTypes.string\n};\n\nexport default Page;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { useSnackbar } from \"notistack\";\nimport { Box, Button, Card, CardContent, Grid, TextField, CardHeader, Divider, makeStyles } from \"@material-ui/core\";\n\nimport { API_OLD_URL } from \"@dashboard/constants\";\nimport axios from \"@dashboard/utils/axios\";\nimport { reloadPage } from \"@dashboard/utils/helpers\";\n\nconst useStyles = makeStyles(() => ({\n    root: {},\n    datapicker: {\n        width: \"100%\"\n    }\n}));\n\nconst provincias = [\n    \"Bengo\",\n    \"Benguela\",\n    \"Bié\",\n    \"Cabinda\",\n    \"Cuando-Cubango\",\n    \"Cuanza Norte\",\n    \"Cuanza Sul\",\n    \"Cunene\",\n    \"Huambo\",\n    \"Huíla\",\n    \"Luanda\",\n    \"Lunda Norte\",\n    \"Lunda Sul\",\n    \"Malanje\",\n    \"Moxico\",\n    \"Namibe\",\n    \"Uíge\",\n    \"Zaire\"\n];\n\nfunction MyAgencyEditForm({ className, agency, ...rest }) {\n    const classes = useStyles();\n    const { enqueueSnackbar } = useSnackbar();\n\n    return (\n        <Formik\n            initialValues={{\n                name: agency.name || \"\",\n                address: agency.address || \"\",\n                province: agency.province || \"Luanda\"\n            }}\n            validationSchema={Yup.object().shape({\n                name: Yup.string()\n                    .max(255)\n                    .required(\"O nome é obrigatório\"),\n                address: Yup.string().required(\"O endereço é obrigatório\")\n            })}\n            onSubmit={async (values, { resetForm, setErrors, setStatus, setSubmitting }) => {\n                try {\n                    await axios.put(`${API_OLD_URL}/agencies/${agency.id}`, {\n                        ...values\n                    });\n                    resetForm({ values });\n                    setStatus({ success: true });\n                    setSubmitting(false);\n                    enqueueSnackbar(\"Agência atualizada\", {\n                        variant: \"success\"\n                    });\n                    reloadPage();\n                } catch (error) {\n                    setStatus({ success: false });\n                    setErrors({ submit: error.message });\n                    setSubmitting(false);\n                    enqueueSnackbar(error.message, {\n                        variant: \"error\"\n                    });\n                }\n            }}\n        >\n            {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                <form className={clsx(classes.root, className)} onSubmit={handleSubmit} {...rest}>\n                    <Card>\n                        <CardHeader title=\"Informações da agência\" />\n                        <Divider />\n                        <CardContent>\n                            <Grid container spacing={3}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        error={Boolean(touched.name && errors.name)}\n                                        fullWidth\n                                        helperText={touched.name && errors.name}\n                                        label=\"Nome\"\n                                        name=\"name\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        required\n                                        value={values.name}\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} lg={6}>\n                                    <TextField\n                                        fullWidth\n                                        label=\"Director\"\n                                        value={agency.director.full_name}\n                                        variant=\"outlined\"\n                                        disabled\n                                    />\n                                </Grid>\n                                <Grid item xs={12} lg={6}>\n                                    <TextField\n                                        label=\"Província\"\n                                        name=\"province\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        required\n                                        select\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        SelectProps={{ native: true }}\n                                        value={values.province}\n                                    >\n                                        {provincias.map(option => (\n                                            <option key={option} value={option}>\n                                                {option}\n                                            </option>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        error={Boolean(touched.address && errors.address)}\n                                        fullWidth\n                                        helperText={touched.address && errors.address}\n                                        label=\"Endereço\"\n                                        name=\"address\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        required\n                                        value={values.address}\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Box mt={2}>\n                                <Button variant=\"contained\" color=\"secondary\" type=\"submit\" disabled={isSubmitting}>\n                                    Actualizar agência\n                                </Button>\n                            </Box>\n                        </CardContent>\n                    </Card>\n                </form>\n            )}\n        </Formik>\n    );\n}\n\nMyAgencyEditForm.propTypes = {\n    className: PropTypes.string,\n    agency: PropTypes.object.isRequired\n};\n\nexport default MyAgencyEditForm;\n","import React from \"react\";\nimport { Box, Container, makeStyles } from \"@material-ui/core\";\n\nimport Page from \"@dashboard/components/Page\";\nimport useAuth from \"@dashboard/hooks/useAuth\";\nimport MyAgencyEditForm from \"./MyAgencyEditForm\";\nimport Header from \"@dashboard/components/Header\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.dark,\n        minHeight: \"100%\",\n        paddingTop: theme.spacing(3),\n        paddingBottom: theme.spacing(3)\n    }\n}));\n\nconst breadcrumbItems = [\n    {\n        label: \"Recursos\"\n    },\n    {\n        label: \"Agências\"\n    },\n    {\n        label: \"Editar a minha agência\",\n        active: true\n    }\n];\n\nfunction AgencyEditView() {\n    const classes = useStyles();\n    const { user } = useAuth();\n\n    return (\n        <Page className={classes.root} title=\"Editar agência\">\n            <Container>\n                <Header title=\"Editar a minha agência\" breadcrumbItems={breadcrumbItems} />\n                <Box mt={2}>\n                    <MyAgencyEditForm agency={user.agency} />\n                </Box>\n            </Container>\n        </Page>\n    );\n}\n\nexport default AgencyEditView;\n","import axios from \"axios\";\r\n\r\nconst csrfToken = document.querySelector(\"[name=csrf-token]\").getAttribute(\"content\");\r\nconst axiosInstance = axios.create();\r\n\r\naxiosInstance.interceptors.response.use(\r\n    response => response,\r\n    error => Promise.reject((error.response && error.response.data) || \"Something went wrong\")\r\n);\r\n\r\naxiosInstance.defaults.headers.common[\"X-Requested-With\"] = \"XMLHttpRequest\";\r\naxiosInstance.defaults.headers.common[\"X-CSRF-TOKEN\"] = csrfToken;\r\n\r\nexport default axiosInstance;\r\n","export const reloadPage = () => document.location.reload()","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);"],"sourceRoot":""}