{"version":3,"sources":["webpack:///./resources/js/dashboard/components/BreadCrumbsHeader.js","webpack:///./resources/js/dashboard/components/Header.js","webpack:///./resources/js/dashboard/components/Page.js","webpack:///./resources/js/dashboard/components/AdminOverview.js","webpack:///./resources/js/dashboard/pages/app/OverviewPage/AdminOverviewPage.js","webpack:///./resources/js/dashboard/components/AgencyOverview.js","webpack:///./resources/js/dashboard/pages/app/OverviewPage/OperatorOverviewPage.js","webpack:///./resources/js/dashboard/pages/app/OverviewPage/index.js","webpack:///./resources/js/dashboard/utils/axios.js","webpack:///./resources/js/dashboard/hooks/useIsMountedRef.js"],"names":["BreadCrumbsHeader","items","Breadcrumbs","separator","fontSize","aria-label","map","item","key","to","Link","variant","color","component","RouterLink","label","Typography","active","propTypes","PropTypes","array","isRequired","useStyles","makeStyles","theme","root","action","marginBottom","spacing","marginLeft","Header","className","breadcrumbItems","title","actionButtonType","actionButtonLabel","actionButtonTo","children","rest","classes","Grid","clsx","container","justify","Box","mt","Button","startIcon","SvgIcon","string","Page","forwardRef","ref","node","padding","textAlign","breakpoints","up","borderRight","palette","divider","down","borderBottom","valueContainer","display","alignItems","justifyContent","Overview","isMountedRef","useIsMountedRef","enqueueSnackbar","useSnackbar","nonRecoveredCount","setNonRecoveredCount","useState","recoveredCount","setRecoveredCount","trashedCount","setTrashedCount","getDocuments","useCallback","axios","get","API_URL","then","response","current","data","meta","page","total","catch","error","message","useEffect","overviews","count","Card","overview","md","xs","gutterBottom","isNaN","CircularProgress","backgroundColor","background","dark","minHeight","paddingTop","paddingBottom","AdminOverviewPage","user","Container","gender","first_name","AdminOverview","object","AgencyOverview","OperatorOverviewPage","minWidth","Table","TableHead","TableRow","TableCell","align","TableBody","hover","agency","id","AGENCIES","URI","name","USERS","director","full_name","address","province","Tooltip","IconButton","OverviewPage","useAuth","role","csrfToken","document","querySelector","getAttribute","axiosInstance","create","interceptors","use","Promise","reject","defaults","headers","common","isMounted","useRef"],"mappings":"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","file":"26.js","sourcesContent":["import React from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Breadcrumbs, Link, Typography } from \"@material-ui/core\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\n\r\nfunction BreadCrumbsHeader({ items }) {\r\n    return (\r\n        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n            {items.map((item, key) => {\r\n                if (item.to) {\r\n                    return (\r\n                        <Link key={key} variant=\"body1\" color=\"inherit\" to={item.to} component={RouterLink}>\r\n                            {item.label}\r\n                        </Link>\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <Typography key={key} variant=\"body1\" color={item.active ? \"textPrimary\" : \"inherit\"}>\r\n                            {item.label}\r\n                        </Typography>\r\n                    );\r\n                }\r\n            })}\r\n        </Breadcrumbs>\r\n    );\r\n}\r\n\r\nBreadCrumbsHeader.propTypes = {\r\n    items: PropTypes.array.isRequired\r\n};\r\n\r\nexport default BreadCrumbsHeader;\r\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { Box, Button, Grid, SvgIcon, Typography, makeStyles } from \"@material-ui/core\";\nimport { PlusCircle as PlusCircleIcon, Edit as EditIcon } from \"react-feather\";\n\nimport BreadCrumbsHeader from \"@dashboard/components/BreadCrumbsHeader\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {},\n    action: {\n        marginBottom: theme.spacing(1),\n        \"& + &\": {\n            marginLeft: theme.spacing(1)\n        }\n    }\n}));\n\nconst Header = ({\n    className,\n    breadcrumbItems,\n    title,\n    actionButtonType,\n    actionButtonLabel,\n    actionButtonTo,\n    children,\n    ...rest\n}) => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <Grid className={clsx(classes.root, className)} container justify=\"space-between\" spacing={3} {...rest}>\n                <Grid item>\n                    <BreadCrumbsHeader items={breadcrumbItems} />\n                    <Box mt={2}>\n                        <Typography variant=\"h3\" color=\"textPrimary\">\n                            {title}\n                        </Typography>\n                    </Box>\n                </Grid>\n\n                {actionButtonTo && (\n                    <Grid item>\n                        <Button\n                            color=\"secondary\"\n                            variant=\"contained\"\n                            component={RouterLink}\n                            to={actionButtonTo}\n                            startIcon={\n                                <SvgIcon fontSize=\"small\">\n                                    {actionButtonType === \"edit\" ? <EditIcon /> : <PlusCircleIcon />}\n                                </SvgIcon>\n                            }\n                        >\n                            {actionButtonLabel}\n                        </Button>\n                    </Grid>\n                )}\n            </Grid>\n            {children}\n        </>\n    );\n};\n\nHeader.propTypes = {\n    className: PropTypes.string,\n    breadcrumbItems: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    actionButtonType: PropTypes.string,\n    actionButtonLabel: PropTypes.string,\n    actionButtonTo: PropTypes.string\n};\n\nexport default Header;\n","import React, { forwardRef } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport PropTypes from \"prop-types\";\n\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\n    return (\n        <div ref={ref} {...rest}>\n            <Helmet>\n                <title>{title}</title>\n            </Helmet>\n            {children}\n        </div>\n    );\n});\n\nPage.propTypes = {\n    children: PropTypes.node.isRequired,\n    title: PropTypes.string\n};\n\nexport default Page;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport useIsMountedRef from \"@dashboard/hooks/useIsMountedRef\";\nimport { useSnackbar } from \"notistack\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { Card, Grid, CircularProgress, Typography, makeStyles } from \"@material-ui/core\";\n\nimport axios from \"@dashboard/utils/axios\";\nimport { API_URL } from \"@dashboard/constants\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {},\n    item: {\n        padding: theme.spacing(3),\n        textAlign: \"center\",\n        [theme.breakpoints.up(\"md\")]: {\n            \"&:not(:last-of-type)\": {\n                borderRight: `1px solid ${theme.palette.divider}`\n            }\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            \"&:not(:last-of-type)\": {\n                borderBottom: `1px solid ${theme.palette.divider}`\n            }\n        }\n    },\n    valueContainer: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    }\n}));\n\nconst Overview = ({ className, ...rest }) => {\n    const classes = useStyles();\n    const isMountedRef = useIsMountedRef();\n    const { enqueueSnackbar } = useSnackbar();\n\n    const [nonRecoveredCount, setNonRecoveredCount] = useState(\"loading\");\n    const [recoveredCount, setRecoveredCount] = useState(\"loading\");\n    const [trashedCount, setTrashedCount] = useState(\"loading\");\n\n    const getDocuments = useCallback(() => {\n        axios\n            .get(`${API_URL}/documents?page[page]=1&page[limit]=1`)\n            .then(response => {\n                if (isMountedRef.current) {\n                    setNonRecoveredCount(response.data.meta.page.total);\n                }\n            })\n            .catch(error => {\n                enqueueSnackbar(error.message, {\n                    variant: \"error\"\n                });\n            });\n\n        axios\n            .get(`${API_URL}/documents?filter[only_recovered]&page[page]=1&page[limit]=1`)\n            .then(response => {\n                if (isMountedRef.current) {\n                    setRecoveredCount(response.data.meta.page.total);\n                }\n            })\n            .catch(error => {\n                enqueueSnackbar(error.message, {\n                    variant: \"error\"\n                });\n            });\n\n        axios\n            .get(`${API_URL}/documents?filter[only_trashed]&page[page]=1&page[limit]=1`)\n            .then(response => {\n                if (isMountedRef.current) {\n                    setTrashedCount(response.data.meta.page.total);\n                }\n            })\n            .catch(error => {\n                enqueueSnackbar(error.message, {\n                    variant: \"error\"\n                });\n            });\n    }, [isMountedRef]);\n\n    useEffect(() => {\n        getDocuments();\n    }, [getDocuments]);\n\n    const overviews = [\n        {\n            label: \"Documentos nas agências\",\n            count: nonRecoveredCount\n        },\n        {\n            label: \"Documentos recuperados\",\n            count: recoveredCount\n        },\n        {\n            label: \"Documentos deletados\",\n            count: trashedCount\n        }\n    ];\n\n    return (\n        <Card className={clsx(classes.root, className)} {...rest}>\n            <Grid alignItems=\"center\" container justify=\"space-between\">\n                {overviews.map((overview, key) => (\n                    <Grid key={key} className={classes.item} item md={4} xs={12}>\n                        <Typography component=\"h2\" gutterBottom variant=\"overline\" color=\"textSecondary\">\n                            {overview.label}\n                        </Typography>\n                        <div className={classes.valueContainer}>\n                            {isNaN(overview.count) ? (\n                                <CircularProgress />\n                            ) : (\n                                <Typography variant=\"h3\" color=\"textPrimary\">\n                                    {overview.count}\n                                </Typography>\n                            )}\n                        </div>\n                    </Grid>\n                ))}\n            </Grid>\n        </Card>\n    );\n};\n\nOverview.propTypes = {\n    className: PropTypes.string\n};\n\nexport default Overview;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Box, Container, makeStyles } from \"@material-ui/core\";\r\nimport Page from \"@dashboard/components/Page\";\r\nimport Header from \"@dashboard/components/Header\";\r\nimport AdminOverview from \"@dashboard/components/AdminOverview\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.dark,\r\n        minHeight: \"100%\",\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nconst breadcrumbItems = [\r\n    {\r\n        label: \"Geral\"\r\n    },\r\n    {\r\n        label: \"Visão geral\",\r\n        active: true\r\n    }\r\n];\r\n\r\nconst AdminOverviewPage = ({ user }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Page className={classes.root} title=\"Visão geral\">\r\n            <Container>\r\n                <Header\r\n                    title={`Bem-vind${user.gender === \"M\" ? \"o\" : \"a\"} de volta ${user.first_name}`}\r\n                    breadcrumbItems={breadcrumbItems}\r\n                >\r\n                    <Box mt={3}>\r\n                        <AdminOverview />\r\n                    </Box>\r\n                </Header>\r\n            </Container>\r\n        </Page>\r\n    );\r\n};\r\n\r\nAdminOverviewPage.propTypes = {\r\n    user: PropTypes.object.isRequired\r\n};\r\n\r\nexport default AdminOverviewPage;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport useIsMountedRef from \"@dashboard/hooks/useIsMountedRef\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { Card, Grid, CircularProgress, Typography, makeStyles } from \"@material-ui/core\";\r\n\r\nimport axios from \"@dashboard/utils/axios\";\r\nimport { API_URL } from \"@dashboard/constants\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    item: {\r\n        padding: theme.spacing(3),\r\n        textAlign: \"center\",\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            \"&:not(:last-of-type)\": {\r\n                borderRight: `1px solid ${theme.palette.divider}`\r\n            }\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            \"&:not(:last-of-type)\": {\r\n                borderBottom: `1px solid ${theme.palette.divider}`\r\n            }\r\n        }\r\n    },\r\n    valueContainer: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    }\r\n}));\r\n\r\nconst AgencyOverview = ({ className, ...rest }) => {\r\n    const classes = useStyles();\r\n    const isMountedRef = useIsMountedRef();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const [nonRecoveredCount, setNonRecoveredCount] = useState(\"loading\");\r\n    const [recoveredCount, setRecoveredCount] = useState(\"loading\");\r\n    const [trashedCount, setTrashedCount] = useState(\"loading\");\r\n\r\n    const getDocuments = useCallback(() => {\r\n        axios\r\n            .get(`${API_URL}/documents?page[page]=1&page[limit]=1`)\r\n            .then(response => {\r\n                if (isMountedRef.current) {\r\n                    setNonRecoveredCount(response.data.meta.page.total);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                enqueueSnackbar(error.message, {\r\n                    variant: \"error\"\r\n                });\r\n            });\r\n\r\n        axios\r\n            .get(`${API_URL}/documents?filter[only_recovered]&page[page]=1&page[limit]=1`)\r\n            .then(response => {\r\n                if (isMountedRef.current) {\r\n                    setRecoveredCount(response.data.meta.page.total);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                enqueueSnackbar(error.message, {\r\n                    variant: \"error\"\r\n                });\r\n            });\r\n\r\n        axios\r\n            .get(`${API_URL}/documents?filter[only_trashed]&page[page]=1&page[limit]=1`)\r\n            .then(response => {\r\n                if (isMountedRef.current) {\r\n                    setTrashedCount(response.data.meta.page.total);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                enqueueSnackbar(error.message, {\r\n                    variant: \"error\"\r\n                });\r\n            });\r\n    }, [isMountedRef]);\r\n\r\n    useEffect(() => {\r\n        getDocuments();\r\n    }, [getDocuments]);\r\n\r\n    const overviews = [\r\n        {\r\n            label: \"Documentos na agência\",\r\n            count: nonRecoveredCount\r\n        },\r\n        {\r\n            label: \"Documentos recuperados\",\r\n            count: recoveredCount\r\n        },\r\n        {\r\n            label: \"Documentos deletados\",\r\n            count: trashedCount\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <Card className={clsx(classes.root, className)} {...rest}>\r\n            <Grid alignItems=\"center\" container justify=\"space-between\">\r\n                {overviews.map((overview, key) => (\r\n                    <Grid key={key} className={classes.item} item md={4} xs={12}>\r\n                        <Typography component=\"h2\" gutterBottom variant=\"overline\" color=\"textSecondary\">\r\n                            {overview.label}\r\n                        </Typography>\r\n                        <div className={classes.valueContainer}>\r\n                            {isNaN(overview.count) ? (\r\n                                <CircularProgress />\r\n                            ) : (\r\n                                <Typography variant=\"h3\" color=\"textPrimary\">\r\n                                    {overview.count}\r\n                                </Typography>\r\n                            )}\r\n                        </div>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </Card>\r\n    );\r\n};\r\n\r\nAgencyOverview.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default AgencyOverview;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport {\r\n    Box,\r\n    Container,\r\n    Typography,\r\n    Card,\r\n    Link,\r\n    Table,\r\n    TableHead,\r\n    TableRow,\r\n    TableBody,\r\n    TableCell,\r\n    Tooltip,\r\n    IconButton,\r\n    SvgIcon,\r\n    makeStyles\r\n} from \"@material-ui/core\";\r\nimport { ArrowRight as ArrowRightIcon } from \"react-feather\";\r\n\r\nimport Page from \"@dashboard/components/Page\";\r\nimport Header from \"@dashboard/components/Header\";\r\nimport AgencyOverview from \"@dashboard/components/AgencyOverview\";\r\nimport { AGENCIES, USERS } from \"@dashboard/routes/uris\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.dark,\r\n        minHeight: \"100%\",\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nconst breadcrumbItems = [\r\n    {\r\n        label: \"Geral\"\r\n    },\r\n    {\r\n        label: \"Visão geral\",\r\n        active: true\r\n    }\r\n];\r\n\r\nconst OperatorOverviewPage = ({ user }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Page className={classes.root} title=\"Visão geral\">\r\n            <Container>\r\n                <Header\r\n                    title={`Bem-vind${user.gender === \"M\" ? \"o\" : \"a\"} de volta ${user.first_name}`}\r\n                    breadcrumbItems={breadcrumbItems}\r\n                >\r\n                    <Box mt={3}>\r\n                        <AgencyOverview />\r\n                    </Box>\r\n                </Header>\r\n                <Box mt={4}>\r\n                    <Typography variant=\"h3\" color=\"textPrimary\">\r\n                        Minha agência\r\n                    </Typography>\r\n                    <Box mt={3}>\r\n                        <Card>\r\n                            <PerfectScrollbar>\r\n                                <Box minWidth={700}>\r\n                                    <Table>\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell>Nome</TableCell>\r\n                                                <TableCell>Director</TableCell>\r\n                                                <TableCell>Endereço</TableCell>\r\n                                                <TableCell>Província</TableCell>\r\n                                                <TableCell align=\"right\">Acções</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            <TableRow hover key={user.agency.id}>\r\n                                                <TableCell>\r\n                                                    <Link\r\n                                                        color=\"inherit\"\r\n                                                        component={RouterLink}\r\n                                                        to={`${AGENCIES.URI}/${user.agency.id}`}\r\n                                                        variant=\"h6\"\r\n                                                    >\r\n                                                        {user.agency.name}\r\n                                                    </Link>\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    <Link\r\n                                                        color=\"inherit\"\r\n                                                        component={RouterLink}\r\n                                                        to={`${USERS.URI}/${user.agency.director.id}`}\r\n                                                        variant=\"h6\"\r\n                                                    >\r\n                                                        {user.agency.director.full_name}\r\n                                                    </Link>\r\n                                                </TableCell>\r\n                                                <TableCell>{user.agency.address}</TableCell>\r\n                                                <TableCell>{user.agency.province}</TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <Tooltip title=\"Ver detalhes\" aria-label=\"ver detalhes\">\r\n                                                        <IconButton\r\n                                                            component={RouterLink}\r\n                                                            to={`${AGENCIES.URI}/minha-agencia`}\r\n                                                        >\r\n                                                            <SvgIcon fontSize=\"small\">\r\n                                                                <ArrowRightIcon />\r\n                                                            </SvgIcon>\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </Box>\r\n                            </PerfectScrollbar>\r\n                        </Card>\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n        </Page>\r\n    );\r\n};\r\n\r\nOperatorOverviewPage.propTypes = {\r\n    className: PropTypes.string,\r\n    user: PropTypes.object.isRequired\r\n};\r\n\r\nexport default OperatorOverviewPage;\r\n","import React from \"react\";\nimport useAuth from \"@dashboard/hooks/useAuth\";\nimport AdminOverviewPage from \"./AdminOverviewPage\";\nimport OperatorOverviewPage from \"./OperatorOverviewPage\";\n\nconst OverviewPage = () => {\n    const { user } = useAuth();\n\n    if (user.role === \"administrador\") {\n        return <AdminOverviewPage user={user} />;\n    } else {\n        return <OperatorOverviewPage user={user} />;\n    }\n};\n\nexport default OverviewPage;\n","import axios from \"axios\";\n\nconst csrfToken = document.querySelector(\"[name=csrf-token]\").getAttribute(\"content\");\nconst axiosInstance = axios.create();\n\naxiosInstance.interceptors.response.use(\n    response => response,\n    error => Promise.reject((error.response && error.response.data) || \"Something went wrong\")\n);\n\naxiosInstance.defaults.headers.common[\"X-Requested-With\"] = \"XMLHttpRequest\";\naxiosInstance.defaults.headers.common[\"X-CSRF-TOKEN\"] = csrfToken;\n\nexport default axiosInstance;\n","import { useRef, useEffect } from \"react\";\n\nconst useIsMountedRef = () => {\n    const isMounted = useRef(true);\n\n    useEffect(\n        () => () => {\n            isMounted.current = false;\n        },\n        []\n    );\n\n    return isMounted;\n};\n\nexport default useIsMountedRef;\n"],"sourceRoot":""}